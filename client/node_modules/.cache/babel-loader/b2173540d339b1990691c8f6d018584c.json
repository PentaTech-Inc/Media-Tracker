{"ast":null,"code":"import _slicedToArray from \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/pages/Media.js\";\n\n/**\n * Media Information\n * @summary Displays information about TV shows and movies.\n */\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport * as qs from 'qs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaStar } from 'react-icons/fa';\n\nconst Media = props => {\n  const _useState = useState({\n    data: {\n      id: 0,\n      type: \"\",\n      title: \"\",\n      overview: \"\",\n      rating: 0,\n      voteCount: 0,\n      posterPath: \"/\",\n      seasons: 0,\n      releaseDate: \"0000\",\n      firstAirDate: \"0000\",\n      lastAirDate: \"0000\",\n      runtime: 0,\n      genre: \"\"\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        media = _useState2[0],\n        setMedia = _useState2[1];\n\n  const query = qs.parse(props.location.search, {\n    ignoreQueryPrefix: true\n  });\n  let id = \"\";\n  let type = \"\";\n  if (query.id) id = query.id;\n  if (query.type) type = query.type;\n  const posterBaseURL = \"http://image.tmdb.org/t/p/w185_and_h278_bestv2\";\n  useEffect(() => {\n    fetch(\"/api/getTitleDetails?id=\" + id + \"&type=\" + type).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else if (res.status === 401) {\n        fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type).then(res => {\n          if (res.status === 200) {\n            window.location.reload();\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        }).catch(err => {\n          console.error(err);\n          alert('Error navigating to title\\'s page. Please try again.');\n        });\n      }\n    }).then(data => {\n      setMedia({\n        data: data\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  const handleClick = () => {\n    fetch('/api/addToList?id' + id + \"&type=\" + type).then(res => {\n      if (res.status === 200) {\n        alert(\"Added title to list!\");\n      }\n    });\n  };\n\n  return React.createElement(Layout, {\n    fluid: true,\n    style: body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, type === \"movie\" ? React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    lg: 4,\n    xl: 3,\n    style: colStyle,\n    className: \"text-xs-center text-sm-center text-md-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: mediaCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: mediaPoster,\n    src: media.data.posterPath ? posterBaseURL + media.data.posterPath : \"\",\n    alt: \"poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add to List\"))), React.createElement(Col, {\n    md: 8,\n    lg: 8,\n    xl: 9,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: mediaTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, media.data.title ? media.data.title : \"\")), React.createElement(\"h6\", {\n    style: mediaDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Movie\"), \"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, media.data.releaseDate ? media.data.releaseDate.substring(0, 4) : \"\"), \"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, media.data.genre ? media.data.genre : \"\")), React.createElement(\"div\", {\n    style: mediaRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, media.data.rating ? React.createElement(FaStar, {\n    size: \"xs\",\n    style: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }) : \"No ratings\", \"\\xA0\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, media.data.rating ? media.data.rating : \"\"), \"\\xA0\\xA0\", React.createElement(\"span\", {\n    style: votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, media.data.voteCount ? (media.data.voteCount + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\", \" votes\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: mediaSummary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, media.data.overview ? media.data.overview : \"\")))) : React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 4,\n    lg: 4,\n    xl: 3,\n    style: colStyle,\n    className: \"text-xs-center text-sm-center text-md-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: mediaCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: mediaPoster,\n    src: media.data.posterPath ? posterBaseURL + media.data.posterPath : \"\",\n    alt: \"poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Add to List\"))), React.createElement(Col, {\n    md: 8,\n    lg: 8,\n    xl: 9,\n    style: colStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: mediaTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, media.data.title ? media.data.title : \"\")), React.createElement(\"h6\", {\n    style: mediaDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"TV Series\"), \"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, media.data.firstAirDate ? media.data.firstAirDate.substring(0, 4) : \"\", \" - \", media.data.lastAirDate ? media.data.lastAirDate.substring(0, 4) : \"\"), \"\\xA0\\xA0\\xA0|\\xA0\\xA0\\xA0\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, media.data.genre ? media.data.genre : \"\")), React.createElement(\"div\", {\n    style: mediaRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(FaStar, {\n    size: \"xs\",\n    style: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), \"\\xA0\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, media.data.rating ? media.data.rating : \"\"), \"\\xA0\\xA0\", React.createElement(\"span\", {\n    style: votes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, media.data.voteCount ? (media.data.voteCount + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\", \" votes\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: mediaSummary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, media.data.overview ? media.data.overview : \"\"))))));\n};\n\nconst body = {\n  paddingTop: 30,\n  paddingBottom: 100,\n  paddingRight: '2.5%',\n  paddingLeft: '2.5%',\n  textAlign: 'center'\n};\nconst colStyle = {\n  paddingLeft: '2.5%',\n  paddingRight: '2.5%'\n};\nconst mediaCard = {\n  display: 'block',\n  width: '500px'\n};\nconst mediaPoster = {\n  width: '185px',\n  height: '278px'\n};\nconst mediaTitle = {\n  color: 'black',\n  textAlign: 'left'\n};\nconst mediaDetails = {\n  color: 'black',\n  opacity: '.7',\n  textAlign: 'left'\n};\nconst mediaRating = {\n  textAlign: 'left',\n  fontSize: '20pt',\n  marginTop: 10\n};\nconst icon = {\n  color: 'gold',\n  width: 25,\n  marginTop: '-5'\n};\nconst votes = {\n  color: 'black',\n  opacity: '0.7',\n  fontSize: '10pt'\n};\nconst mediaSummary = {\n  textAlign: 'left'\n};\nexport default Media;","map":{"version":3,"sources":["/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/pages/Media.js"],"names":["React","useState","useEffect","Layout","Container","Row","Col","Button","qs","FaStar","Media","props","data","id","type","title","overview","rating","voteCount","posterPath","seasons","releaseDate","firstAirDate","lastAirDate","runtime","genre","media","setMedia","query","parse","location","search","ignoreQueryPrefix","posterBaseURL","fetch","then","res","status","json","window","reload","error","Error","catch","err","console","alert","handleClick","body","colStyle","mediaCard","mediaPoster","mediaTitle","mediaDetails","substring","mediaRating","icon","votes","replace","mediaSummary","paddingTop","paddingBottom","paddingRight","paddingLeft","textAlign","display","width","height","color","opacity","fontSize","marginTop"],"mappings":"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","sourcesContent":["/**\n * Media Information\n * @summary Displays information about TV shows and movies.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button'\nimport * as qs from 'qs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { FaStar } from 'react-icons/fa';\n\nconst Media = props => {\n    const [media, setMedia] = useState({\n        data: {\n            id: 0,\n            type: \"\",\n            title: \"\",\n            overview: \"\",\n            rating: 0,\n            voteCount: 0,\n            posterPath: \"/\",\n            seasons: 0,\n            releaseDate: \"0000\",\n            firstAirDate: \"0000\",\n            lastAirDate: \"0000\",\n            runtime: 0,\n            genre: \"\",\n        }\n    });\n\n    const query = qs.parse(props.location.search, {\n        ignoreQueryPrefix: true\n    });\n    let id = \"\";\n    let type = \"\";\n    if (query.id)\n        id = query.id;\n    if (query.type)\n        type = query.type;\n    const posterBaseURL = \"http://image.tmdb.org/t/p/w185_and_h278_bestv2\";\n\n\n    useEffect(() => {\n        fetch(\"/api/getTitleDetails?id=\" + id + \"&type=\" + type)\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                } else if (res.status === 401) {\n                    fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type)\n                        .then(res => {\n                            if (res.status === 200) {\n                                window.location.reload();\n                            } else {\n                                const error = new Error(res.error);\n                                throw error;\n                            }\n                        })\n                        .catch(err => {\n                            console.error(err);\n                            alert('Error navigating to title\\'s page. Please try again.');\n                        });\n                }\n            }).then(data => {\n                setMedia({ data: data });\n            })\n            .catch(err => {\n                console.error(err);\n            });\n    }, []);\n\n    const handleClick = () => {\n        fetch('/api/addToList?id' + id + \"&type=\" + type)\n            .then(res => {\n                if (res.status === 200) {\n                    alert(\"Added title to list!\");\n                }\n            });\n    };\n\n    return (\n        <Layout fluid={true} style={body}>\n            <Container fluid>\n                {type === \"movie\" ?\n                    <Row>\n                        <Col md={4} lg={4} xl={3} style={colStyle} className=\"text-xs-center text-sm-center text-md-left\">\n                            <div style={mediaCard}>\n                                <img style={mediaPoster} src={media.data.posterPath ? (posterBaseURL + media.data.posterPath) : \"\"} alt=\"poster\"></img>\n                                <br />\n                                <Button variant=\"primary\" type=\"submit\">Add to List</Button>\n                            </div>\n                        </Col>\n                        <Col md={8} lg={8} xl={9} style={colStyle}>\n                            <div>\n                                <h3 style={mediaTitle}><strong>{media.data.title ? media.data.title : \"\"}</strong></h3>\n                                <h6 style={mediaDetails}>\n                                    <span>Movie</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.releaseDate ? media.data.releaseDate.substring(0, 4) : \"\"}</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.genre ? media.data.genre : \"\"}</span>\n                                </h6>\n\n                                <div style={mediaRating}>\n                                    {media.data.rating ? <FaStar size=\"xs\" style={icon} /> : \"No ratings\"}&nbsp;<span>{media.data.rating ? media.data.rating : \"\"}</span>&nbsp;&nbsp;\n                            <span style={votes}>{media.data.voteCount ? (media.data.voteCount + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\"} votes</span>\n                                </div>\n\n                                <hr />\n\n                                <p style={mediaSummary}>{media.data.overview ? media.data.overview : \"\"}</p>\n                            </div>\n                        </Col>\n                    </Row>\n                    :\n                    <Row>\n                        <Col md={4} lg={4} xl={3} style={colStyle} className=\"text-xs-center text-sm-center text-md-left\">\n                            <div style={mediaCard}>\n                                <img style={mediaPoster} src={media.data.posterPath ? (posterBaseURL + media.data.posterPath) : \"\"} alt=\"poster\"></img>\n                                <br />\n                                <Button variant=\"primary\" type=\"submit\" onClick={handleClick}>Add to List</Button>\n                            </div>\n                        </Col>\n                        <Col md={8} lg={8} xl={9} style={colStyle}>\n                            <div>\n                                <h3 style={mediaTitle}><strong>{media.data.title ? media.data.title : \"\"}</strong></h3>\n                                <h6 style={mediaDetails}>\n                                    <span>TV Series</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.firstAirDate ? media.data.firstAirDate.substring(0, 4) : \"\"} - {media.data.lastAirDate ? media.data.lastAirDate.substring(0, 4) : \"\"}</span>&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;<span>{media.data.genre ? media.data.genre : \"\"}</span>\n                                </h6>\n\n                                <div style={mediaRating}>\n                                    <FaStar size=\"xs\" style={icon} />&nbsp;<span>{media.data.rating ? media.data.rating : \"\"}</span>&nbsp;&nbsp;\n                            <span style={votes}>{media.data.voteCount ? (media.data.voteCount + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"\"} votes</span>\n                                </div>\n\n                                <hr />\n\n                                <p style={mediaSummary}>{media.data.overview ? media.data.overview : \"\"}</p>\n\n                                {/* Leaving off for now but would like to implement in the future\n                            <div>\n                                <h4><strong>Details</strong></h4>\n                                <p>\n                                    <strong>Creator:&nbsp;&nbsp;</strong>Blah <br />\n                                    <strong>Cast:&nbsp;&nbsp;</strong>Blah\n                            </p>\n                            </div>\n                            */}\n                            </div>\n                        </Col>\n                    </Row>\n                }\n            </Container>\n        </Layout>\n    );\n};\n\nconst body = {\n    paddingTop: 30,\n    paddingBottom: 100,\n    paddingRight: '2.5%',\n    paddingLeft: '2.5%',\n    textAlign: 'center'\n};\n\nconst colStyle = {\n    paddingLeft: '2.5%',\n    paddingRight: '2.5%'\n};\n\nconst mediaCard = {\n    display: 'block',\n    width: '500px',\n};\n\nconst mediaPoster = {\n    width: '185px',\n    height: '278px',\n};\n\nconst mediaTitle = {\n    color: 'black',\n    textAlign: 'left'\n}\n\nconst mediaDetails = {\n    color: 'black',\n    opacity: '.7',\n    textAlign: 'left'\n};\n\nconst mediaRating = {\n    textAlign: 'left',\n    fontSize: '20pt',\n    marginTop: 10\n};\n\nconst icon = {\n    color: 'gold',\n    width: 25,\n    marginTop: '-5'\n};\n\nconst votes = {\n    color: 'black',\n    opacity: '0.7',\n    fontSize: '10pt',\n};\n\nconst mediaSummary = {\n    textAlign: 'left'\n};\n\nexport default Media;"]},"metadata":{},"sourceType":"module"}