{"ast":null,"code":"import _slicedToArray from \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/pages/Profile.js\";\n\n/**\n * Profile\n * @summary A profile page for users.\n * Lists a user's username and profile picture, favorite TV shows & movies, and other statistics\n */\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Slider from 'react-slick';\nimport { FaUserPlus, FaCommentDots, FaCalendar } from 'react-icons/fa';\nimport Layout from '../components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport '../styles/Profile.css';\n\nconst Profile = () => {\n  const _useState = useState({\n    data: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        details = _useState2[0],\n        setDetails = _useState2[1];\n\n  const _useState3 = useState({\n    data: {}\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lists = _useState4[0],\n        setLists = _useState4[1];\n\n  const _useState5 = useState({\n    totalMoviesWatched: 0,\n    totalShowsWatched: 0,\n    totalRuntimeMovies: 0,\n    totalEpisodeCount: 0\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stats = _useState6[0],\n        setStats = _useState6[1];\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    adaptiveHeight: true\n  };\n  useEffect(() => {\n    fetch(\"/api/getUserDetails\", {\n      credentials: 'include'\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    }).then(data => {\n      setDetails({\n        data: data\n      });\n      fetch(\"/api/getUserLists?name=\" + data.username).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      }).then(data => {\n        setLists({\n          data: data\n        });\n        let runtime = 0;\n        let seasonCount = 0; // seasons count\n\n        data.movies.map((item, index) => {\n          runtime += item.runtime;\n        });\n        data.shows.map((item, index) => {\n          seasonCount += item.seasons;\n        });\n        setStats({\n          totalMoviesWatched: data.movies.length,\n          totalShowsWatched: data.shows.length,\n          totalRuntimeMovies: runtime,\n          totalSeasonCount: seasonCount\n        });\n      });\n    }).catch(err => {\n      console.error(err);\n      alert('Error checking for valid token.');\n    });\n  }, []);\n  let date = details.data.dateJoined + \"\"; // make string\n\n  date = date.substring(4, 7) + \" \" + date.substring(11, 15);\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      borderBottom: '1px solid black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, details.data.username), React.createElement(\"div\", {\n    className: \"fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: rowStyle,\n    className: \"align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 5,\n    lg: 4,\n    className: \"justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: details.data.avatar,\n    alt: \"profile\",\n    style: profileImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    style: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FaCalendar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \" Joined \", date), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    style: underline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(\"ul\", {\n    style: {\n      listStyle: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Movies watched: \"), stats.totalMoviesWatched, \" movies\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Time spent watching movies: \"), stats.totalRuntimeMovies, \" min\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Shows watched: \"), stats.totalShowsWatched, \" shows\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Seasons binged: \"), stats.totalSeasonCount, \" seasons\"))), React.createElement(Col, {\n    md: 7,\n    lg: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: underline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Movies Watched\"), React.createElement(Slider, Object.assign({\n    style: {\n      marginTop: 10,\n      marginBottom: 30\n    }\n  }, settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), lists.data.movies ? lists.data.movies.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: 105,\n        height: 198\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        marginLeft: 5,\n        marginRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: \"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Use Search to add movies!\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    style: underline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Shows Watched\"), React.createElement(Slider, Object.assign({\n    style: {\n      marginTop: 10,\n      marginBottom: 30\n    }\n  }, settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), lists.data.shows ? lists.data.shows.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: 105,\n        height: 198\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        marginLeft: 5,\n        marginRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: \"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Use Search to add shows!\")))))));\n};\n\nconst rowStyle = {\n  textAlign: 'center',\n  marginTop: 20,\n  marginBottom: 20,\n  marginLeft: '5%',\n  marginRight: '5%'\n};\nconst colStyle = {\n  width: '100%'\n};\nconst alignCenter = {\n  textAlign: 'center'\n};\nconst underline = {\n  textAlign: 'left',\n  color: '#1f57a4',\n  borderBottomStyle: 'solid',\n  borderBottomColor: 'cornflowerBlue',\n  borderBottomWidth: 2\n};\nconst profileImg = {\n  width: 250,\n  height: 250,\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'cover',\n  display: 'block',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  borderStyle: 'solid',\n  borderColor: 'black',\n  borderWidth: 0.4,\n  borderRadius: 500\n};\nconst username = {\n  textAlign: 'center'\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/pages/Profile.js"],"names":["React","useState","useEffect","Row","Col","Card","Slider","FaUserPlus","FaCommentDots","FaCalendar","Layout","Profile","data","details","setDetails","lists","setLists","totalMoviesWatched","totalShowsWatched","totalRuntimeMovies","totalEpisodeCount","stats","setStats","settings","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","fetch","credentials","then","res","status","json","username","runtime","seasonCount","movies","map","item","index","shows","seasons","length","totalSeasonCount","catch","err","console","error","alert","date","dateJoined","substring","borderBottom","rowStyle","avatar","profileImg","underline","listStyle","marginTop","marginBottom","width","height","marginLeft","marginRight","posterPath","textAlign","colStyle","alignCenter","color","borderBottomStyle","borderBottomColor","borderBottomWidth","backgroundRepeat","backgroundSize","display","borderStyle","borderColor","borderWidth","borderRadius"],"mappings":";;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,gBAAtD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sCAAP;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAO,uBAAP;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACYV,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAE;AAAR,GAAD,CADpB;AAAA;AAAA,QACXC,OADW;AAAA,QACFC,UADE;;AAAA,qBAEQb,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAE;AAAR,GAAD,CAFhB;AAAA;AAAA,QAEXG,KAFW;AAAA,QAEJC,QAFI;;AAAA,qBAGQf,QAAQ,CAAC;AAC/BgB,IAAAA,kBAAkB,EAAE,CADW;AAE/BC,IAAAA,iBAAiB,EAAE,CAFY;AAG/BC,IAAAA,kBAAkB,EAAE,CAHW;AAI/BC,IAAAA,iBAAiB,EAAE;AAJY,GAAD,CAHhB;AAAA;AAAA,QAGXC,KAHW;AAAA,QAGJC,QAHI;;AAUlB,QAAMC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,KAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,cAAc,EAAE;AANH,GAAjB;AASA3B,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,KAAK,CAAC,qBAAD,EAAwB;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAxB,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,KALL,EAKOH,IALP,CAKYpB,IAAI,IAAI;AACZE,MAAAA,UAAU,CAAC;AAAEF,QAAAA,IAAI,EAAEA;AAAR,OAAD,CAAV;AACAkB,MAAAA,KAAK,CAAC,4BAA4BlB,IAAI,CAACwB,QAAlC,CAAL,CACKJ,IADL,CACUC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,iBAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,OALL,EAKOH,IALP,CAKYpB,IAAI,IAAI;AACZI,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAEA;AAAR,SAAD,CAAR;AACA,YAAIyB,OAAO,GAAG,CAAd;AACA,YAAIC,WAAW,GAAG,CAAlB,CAHY,CAGS;;AACrB1B,QAAAA,IAAI,CAAC2B,MAAL,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7BL,UAAAA,OAAO,IAAII,IAAI,CAACJ,OAAhB;AACH,SAFD;AAGAzB,QAAAA,IAAI,CAAC+B,KAAL,CAAWH,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5BJ,UAAAA,WAAW,IAAIG,IAAI,CAACG,OAApB;AACH,SAFD;AAGAtB,QAAAA,QAAQ,CAAC;AACLL,UAAAA,kBAAkB,EAAEL,IAAI,CAAC2B,MAAL,CAAYM,MAD3B;AAEL3B,UAAAA,iBAAiB,EAAEN,IAAI,CAAC+B,KAAL,CAAWE,MAFzB;AAGL1B,UAAAA,kBAAkB,EAAEkB,OAHf;AAILS,UAAAA,gBAAgB,EAAER;AAJb,SAAD,CAAR;AAMH,OArBL;AAsBH,KA7BL,EA8BKS,KA9BL,CA8BWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACH,KAjCL;AAkCH,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,MAAIC,IAAI,GAAGvC,OAAO,CAACD,IAAR,CAAayC,UAAb,GAA0B,EAArC,CAxDkB,CAwDuB;;AACzCD,EAAAA,IAAI,GAAGA,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,CAAlB,IAAuB,GAAvB,GAA6BF,IAAI,CAACE,SAAL,CAAe,EAAf,EAAmB,EAAnB,CAApC;AACA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiD1C,OAAO,CAACD,IAAR,CAAawB,QAA9D,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEoB,QAAZ;AAAsB,IAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAmB,IAAA,SAAS,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAE3C,OAAO,CAACD,IAAR,CAAa6C,MAAvB;AAA+B,IAAA,GAAG,EAAC,SAAnC;AAA6C,IAAA,KAAK,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAI,IAAA,KAAK,EAAEtB,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,cAA4CgB,IAA5C,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAI,IAAA,KAAK,EAAEO,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,EAAsCvC,KAAK,CAACJ,kBAA5C,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAJ,EAAkDI,KAAK,CAACF,kBAAxD,SAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,EAAqCE,KAAK,CAACH,iBAA3C,WAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,EAAsCG,KAAK,CAACyB,gBAA5C,aAJJ,CANJ,CADJ,EAeI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAEa,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE;AAA/B;AAAf,KAAwDvC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKR,KAAK,CAACH,IAAN,CAAW2B,MAAX,GAAqBxB,KAAK,CAACH,IAAN,CAAW2B,MAAZ,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1D,WACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,KAAK,EAAE;AAAEqB,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,CAAd;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,mDAAmDzB,IAAI,CAAC0B,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH,GARoB,CAApB,GAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAXR,CAFJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EAmBI;AAAI,IAAA,KAAK,EAAER,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBJ,EAoBI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE;AAA/B;AAAf,KAAwDvC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKR,KAAK,CAACH,IAAN,CAAW+B,KAAX,GAAoB5B,KAAK,CAACH,IAAN,CAAW+B,KAAZ,CAAmBH,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxD,WACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,KAAK,EAAE;AAAEqB,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,CAAd;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,mDAAmDzB,IAAI,CAAC0B,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH,GARmB,CAAnB,GAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CAXR,CApBJ,CAfJ,CADJ,CAFJ,CADJ;AA8DH,CAxHD;;AA0HA,MAAMX,QAAQ,GAAG;AACbY,EAAAA,SAAS,EAAE,QADE;AAEbP,EAAAA,SAAS,EAAE,EAFE;AAGbC,EAAAA,YAAY,EAAE,EAHD;AAIbG,EAAAA,UAAU,EAAE,IAJC;AAKbC,EAAAA,WAAW,EAAE;AALA,CAAjB;AAQA,MAAMG,QAAQ,GAAG;AACbN,EAAAA,KAAK,EAAE;AADM,CAAjB;AAIA,MAAMO,WAAW,GAAG;AAChBF,EAAAA,SAAS,EAAE;AADK,CAApB;AAIA,MAAMT,SAAS,GAAG;AACdS,EAAAA,SAAS,EAAE,MADG;AAEdG,EAAAA,KAAK,EAAE,SAFO;AAGdC,EAAAA,iBAAiB,EAAE,OAHL;AAIdC,EAAAA,iBAAiB,EAAE,gBAJL;AAKdC,EAAAA,iBAAiB,EAAE;AALL,CAAlB;AAQA,MAAMhB,UAAU,GAAG;AACfK,EAAAA,KAAK,EAAE,GADQ;AAEfC,EAAAA,MAAM,EAAE,GAFO;AAGfW,EAAAA,gBAAgB,EAAE,WAHH;AAIfC,EAAAA,cAAc,EAAE,OAJD;AAKfC,EAAAA,OAAO,EAAE,OALM;AAMfZ,EAAAA,UAAU,EAAE,MANG;AAOfC,EAAAA,WAAW,EAAE,MAPE;AAQfY,EAAAA,WAAW,EAAE,OARE;AASfC,EAAAA,WAAW,EAAE,OATE;AAUfC,EAAAA,WAAW,EAAE,GAVE;AAWfC,EAAAA,YAAY,EAAE;AAXC,CAAnB;AAcA,MAAM7C,QAAQ,GAAG;AACbgC,EAAAA,SAAS,EAAE;AADE,CAAjB;AAKA,eAAezD,OAAf","sourcesContent":["/**\n * Profile\n * @summary A profile page for users.\n * Lists a user's username and profile picture, favorite TV shows & movies, and other statistics\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Slider from 'react-slick';\nimport { FaUserPlus, FaCommentDots, FaCalendar } from 'react-icons/fa';\nimport Layout from '../components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport '../styles/Profile.css';\n\nconst Profile = () => {\n    const [details, setDetails] = useState({ data: {} });\n    const [lists, setLists] = useState({ data: {} });\n    const [stats, setStats] = useState({\n        totalMoviesWatched: 0,\n        totalShowsWatched: 0,\n        totalRuntimeMovies: 0,\n        totalEpisodeCount: 0\n    });\n\n    const settings = {\n        dots: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        adaptiveHeight: true\n    };\n\n    useEffect(() => {\n        fetch(\"/api/getUserDetails\", { credentials: 'include' })\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                }\n            }).then(data => {\n                setDetails({ data: data });\n                fetch(\"/api/getUserLists?name=\" + data.username)\n                    .then(res => {\n                        if (res.status === 200) {\n                            return res.json();\n                        }\n                    }).then(data => {\n                        setLists({ data: data });\n                        let runtime = 0;\n                        let seasonCount = 0; // seasons count\n                        data.movies.map((item, index) => {\n                            runtime += item.runtime;\n                        });\n                        data.shows.map((item, index) => {\n                            seasonCount += item.seasons;\n                        });\n                        setStats({\n                            totalMoviesWatched: data.movies.length,\n                            totalShowsWatched: data.shows.length,\n                            totalRuntimeMovies: runtime,\n                            totalSeasonCount: seasonCount\n                        });\n                    });\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Error checking for valid token.');\n            });\n    }, []);\n\n    let date = details.data.dateJoined + \"\"; // make string\n    date = date.substring(4, 7) + \" \" + date.substring(11, 15);\n    return (\n        <Layout>\n            <h1 style={{ borderBottom: '1px solid black' }}>{details.data.username}</h1>\n            <div className=\"fluid\">\n                <Row style={rowStyle} className=\"align-items-center\">\n                    <Col md={5} lg={4} className=\"justify-content-center\">\n                        <img src={details.data.avatar} alt=\"profile\" style={profileImg} />\n                        <br />\n                        <h5 style={username}><FaCalendar /> Joined {date}</h5>\n                        <br />\n                        <h4 style={underline}>Statistics</h4>\n                        <ul style={{ listStyle: 'none' }}>\n                            <li><strong>Movies watched: </strong>{stats.totalMoviesWatched} movies</li>\n                            <li><strong>Time spent watching movies: </strong>{stats.totalRuntimeMovies} min</li>\n                            <li><strong>Shows watched: </strong>{stats.totalShowsWatched} shows</li>\n                            <li><strong>Seasons binged: </strong>{stats.totalSeasonCount} seasons</li>\n                        </ul>\n                    </Col>\n\n                    <Col md={7} lg={8}>\n                        <h3 style={underline}>Movies Watched</h3>\n                        <Slider style={{ marginTop: 10, marginBottom: 30 }} {...settings}>\n                            {lists.data.movies ? (lists.data.movies).map((item, index) => {\n                                return (\n                                    <div key={index} style={{ width: 105, height: 198 }}>\n                                        <Card style={{ marginLeft: 5, marginRight: 5 }}>\n                                            <Card.Img src={\"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath} />\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                                :\n                                <div>\n                                    <p>Use Search to add movies!</p>\n                                </div>\n                            }\n                        </Slider>\n                        <br />\n                        <h3 style={underline}>Shows Watched</h3>\n                        <Slider style={{ marginTop: 10, marginBottom: 30 }} {...settings}>\n                            {lists.data.shows ? (lists.data.shows).map((item, index) => {\n                                return (\n                                    <div key={index} style={{ width: 105, height: 198 }}>\n                                        <Card style={{ marginLeft: 5, marginRight: 5 }}>\n                                            <Card.Img src={\"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath} />\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                                :\n                                <div>\n                                    <p>Use Search to add shows!</p>\n                                </div>\n                            }\n                        </Slider>\n                    </Col>\n                </Row>\n\n\n            </div>\n        </Layout >\n    );\n};\n\nconst rowStyle = {\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: '5%',\n    marginRight: '5%'\n};\n\nconst colStyle = {\n    width: '100%',\n};\n\nconst alignCenter = {\n    textAlign: 'center'\n};\n\nconst underline = {\n    textAlign: 'left',\n    color: '#1f57a4',\n    borderBottomStyle: 'solid',\n    borderBottomColor: 'cornflowerBlue',\n    borderBottomWidth: 2\n};\n\nconst profileImg = {\n    width: 250,\n    height: 250,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderStyle: 'solid',\n    borderColor: 'black',\n    borderWidth: 0.4,\n    borderRadius: 500\n};\n\nconst username = {\n    textAlign: 'center',\n};\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}