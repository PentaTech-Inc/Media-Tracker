{"ast":null,"code":"import _defineProperty from \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/pages/Profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Profile\n * @summary A profile page for users.\n * Lists a user's username and profile picture, favorite TV shows & movies, and other statistics\n */\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Slider from 'react-slick';\nimport { FaUserPlus, FaCommentDots, FaCalendar } from 'react-icons/fa';\nimport Layout from '../components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport '../styles/Profile.css';\n\nconst Profile = props => {\n  const _useState = useState({\n    data: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        details = _useState2[0],\n        setDetails = _useState2[1];\n\n  const _useState3 = useState({\n    data: {}\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lists = _useState4[0],\n        setLists = _useState4[1];\n\n  const _useState5 = useState({\n    totalMoviesWatched: 0,\n    totalShowsWatched: 0,\n    totalRuntimeMovies: 0,\n    totalEpisodeCount: 0\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stats = _useState6[0],\n        setStats = _useState6[1];\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    adaptiveHeight: true,\n    nextArrow: React.createElement(NextArrow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    prevArrow: React.createElement(PrevArrow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })\n  };\n  useEffect(() => {\n    fetch(\"/api/getUserDetails\", {\n      credentials: 'include'\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    }).then(data => {\n      setDetails({\n        data: data\n      });\n      fetch(\"/api/getUserLists?name=\" + data.username).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      }).then(data => {\n        setLists({\n          data: data\n        });\n        let runtime = 0;\n        let seasonCount = 0; // seasons count\n\n        data.movies.map((item, index) => {\n          runtime += item.runtime;\n        });\n        data.shows.map((item, index) => {\n          seasonCount += item.seasons;\n        });\n        setStats({\n          totalMoviesWatched: data.movies.length,\n          totalShowsWatched: data.shows.length,\n          totalRuntimeMovies: runtime,\n          totalSeasonCount: seasonCount\n        });\n      });\n    }).catch(err => {\n      console.error(err);\n      alert('Error checking for valid token.');\n    });\n  }, []);\n\n  const handleMediaPage = (id, type) => event => {\n    event.preventDefault();\n    fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type).then(res => {\n      if (res.status === 200) {\n        props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n      } else if (res.status === 202) {\n        props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n      } else if (res.status === 500) {\n        console.log(res);\n        alert(\"Error: Insufficient information for title. Available only as a search result.\");\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).catch(err => {\n      console.error(err);\n      alert('Error navigating to title\\'s page. Please try again.');\n    });\n  };\n\n  let date = details.data.dateJoined + \"\"; // make string\n\n  date = date.substring(4, 7) + \" \" + date.substring(11, 15);\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      borderBottom: '1px solid black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, details.data.username), React.createElement(\"div\", {\n    className: \"fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: rowStyle,\n    className: \"align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 5,\n    lg: 4,\n    className: \"justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: details.data.avatar,\n    alt: \"profile\",\n    style: profileImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    style: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(FaCalendar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), \" Joined \", date)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    style: underline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(\"ul\", {\n    style: {\n      textAlign: 'left',\n      listStyle: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Movies watched: \"), stats.totalMoviesWatched, \" movies\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Total runtime: \"), stats.totalRuntimeMovies, \" min\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Shows watched: \"), stats.totalShowsWatched, \" shows\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Seasons binged: \"), stats.totalSeasonCount, \" seasons\")))), React.createElement(Col, {\n    md: 7,\n    lg: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: underline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Movies Watched\"), React.createElement(Slider, Object.assign({\n    style: {\n      marginTop: 10,\n      marginBottom: 30\n    }\n  }, settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), lists.data.movies ? lists.data.movies.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: 105,\n        height: 198\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        marginLeft: 5,\n        marginRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: handleMediaPage(item.id, \"movie\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: \"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))));\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Use Search to add movies!\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    style: underline,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Shows Watched\"), React.createElement(Slider, Object.assign({\n    style: {\n      marginTop: 10,\n      marginBottom: 30\n    }\n  }, settings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), lists.data.shows ? lists.data.shows.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: 105,\n        height: 198\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        marginLeft: 5,\n        marginRight: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: handleMediaPage(item.id, \"movie\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: \"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))));\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Use Search to add shows!\")))))));\n};\n\nconst NextArrow = props => {\n  const className = props.className,\n        style = props.style,\n        onClick = props.onClick;\n  return React.createElement(\"div\", {\n    className: className,\n    style: _objectSpread({}, style, {\n      borderRadius: 50,\n      display: \"block\",\n      background: \"lightgrey\"\n    }),\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  });\n};\n\nconst PrevArrow = props => {\n  const className = props.className,\n        style = props.style,\n        onClick = props.onClick;\n  return React.createElement(\"div\", {\n    className: className,\n    style: _objectSpread({}, style, {\n      borderRadius: 50,\n      display: \"block\",\n      background: \"lightgrey\"\n    }),\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  });\n};\n\nconst rowStyle = {\n  textAlign: 'center',\n  marginTop: 20,\n  marginBottom: 20,\n  marginLeft: '5%',\n  marginRight: '5%'\n};\nconst colStyle = {\n  width: '100%'\n};\nconst alignCenter = {\n  textAlign: 'center'\n};\nconst underline = {\n  textAlign: 'left',\n  color: '#1f57a4',\n  borderBottomStyle: 'solid',\n  borderBottomColor: 'cornflowerBlue',\n  borderBottomWidth: 2\n};\nconst profileImg = {\n  width: 250,\n  height: 250,\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'cover',\n  display: 'block',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  borderStyle: 'solid',\n  borderColor: 'black',\n  borderWidth: 0.4,\n  borderRadius: 500\n};\nconst username = {\n  textAlign: 'center'\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/fabian/Documents/GitHub/PentaTech/Media-Tracker/client/src/pages/Profile.js"],"names":["React","useState","useEffect","Row","Col","Card","Slider","FaUserPlus","FaCommentDots","FaCalendar","Layout","Profile","props","data","details","setDetails","lists","setLists","totalMoviesWatched","totalShowsWatched","totalRuntimeMovies","totalEpisodeCount","stats","setStats","settings","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","nextArrow","prevArrow","fetch","credentials","then","res","status","json","username","runtime","seasonCount","movies","map","item","index","shows","seasons","length","totalSeasonCount","catch","err","console","error","alert","handleMediaPage","id","type","event","preventDefault","history","push","log","Error","date","dateJoined","substring","borderBottom","rowStyle","avatar","profileImg","underline","textAlign","listStyle","marginTop","marginBottom","width","height","marginLeft","marginRight","cursor","posterPath","NextArrow","className","style","onClick","borderRadius","display","background","PrevArrow","colStyle","alignCenter","color","borderBottomStyle","borderBottomColor","borderBottomWidth","backgroundRepeat","backgroundSize","borderStyle","borderColor","borderWidth"],"mappings":";;;;;;;;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,gBAAtD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sCAAP;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAO,uBAAP;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,oBACSX,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAD,CADjB;AAAA;AAAA,QACdC,OADc;AAAA,QACLC,UADK;;AAAA,qBAEKd,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAD,CAFb;AAAA;AAAA,QAEdG,KAFc;AAAA,QAEPC,QAFO;;AAAA,qBAGKhB,QAAQ,CAAC;AAC/BiB,IAAAA,kBAAkB,EAAE,CADW;AAE/BC,IAAAA,iBAAiB,EAAE,CAFY;AAG/BC,IAAAA,kBAAkB,EAAE,CAHW;AAI/BC,IAAAA,iBAAiB,EAAE;AAJY,GAAD,CAHb;AAAA;AAAA,QAGdC,KAHc;AAAA,QAGPC,QAHO;;AAUrB,QAAMC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,KAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,cAAc,EAAE,IANH;AAObC,IAAAA,SAAS,EAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPE;AAQbC,IAAAA,SAAS,EAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARE,GAAjB;AAWA9B,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,KAAK,CAAC,qBAAD,EAAwB;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAxB,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,KALL,EAKOH,IALP,CAKYtB,IAAI,IAAI;AACZE,MAAAA,UAAU,CAAC;AAAEF,QAAAA,IAAI,EAAEA;AAAR,OAAD,CAAV;AACAoB,MAAAA,KAAK,CAAC,4BAA4BpB,IAAI,CAAC0B,QAAlC,CAAL,CACKJ,IADL,CACUC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,iBAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;AACJ,OALL,EAKOH,IALP,CAKYtB,IAAI,IAAI;AACZI,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,IAAI,EAAEA;AAAR,SAAD,CAAR;AACA,YAAI2B,OAAO,GAAG,CAAd;AACA,YAAIC,WAAW,GAAG,CAAlB,CAHY,CAGS;;AACrB5B,QAAAA,IAAI,CAAC6B,MAAL,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7BL,UAAAA,OAAO,IAAII,IAAI,CAACJ,OAAhB;AACH,SAFD;AAGA3B,QAAAA,IAAI,CAACiC,KAAL,CAAWH,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5BJ,UAAAA,WAAW,IAAIG,IAAI,CAACG,OAApB;AACH,SAFD;AAGAxB,QAAAA,QAAQ,CAAC;AACLL,UAAAA,kBAAkB,EAAEL,IAAI,CAAC6B,MAAL,CAAYM,MAD3B;AAEL7B,UAAAA,iBAAiB,EAAEN,IAAI,CAACiC,KAAL,CAAWE,MAFzB;AAGL5B,UAAAA,kBAAkB,EAAEoB,OAHf;AAILS,UAAAA,gBAAgB,EAAER;AAJb,SAAD,CAAR;AAMH,OArBL;AAsBH,KA7BL,EA8BKS,KA9BL,CA8BWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACH,KAjCL;AAkCH,GAnCQ,EAmCN,EAnCM,CAAT;;AAqCA,QAAMC,eAAe,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAeC,KAAD,IAAW;AAC7CA,IAAAA,KAAK,CAACC,cAAN;AACA1B,IAAAA,KAAK,CAAC,sBAAsBuB,EAAtB,GAA2B,QAA3B,GAAsCC,IAAvC,CAAL,CACKtB,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBzB,QAAAA,KAAK,CAACgD,OAAN,CAAcC,IAAd,CAAmB,eAAeL,EAAf,GAAoB,QAApB,GAA+BC,IAAlD;AACH,OAFD,MAEO,IAAIrB,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAC3BzB,QAAAA,KAAK,CAACgD,OAAN,CAAcC,IAAd,CAAmB,eAAeL,EAAf,GAAoB,QAApB,GAA+BC,IAAlD;AACH,OAFM,MAEA,IAAIrB,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAC3Be,QAAAA,OAAO,CAACU,GAAR,CAAY1B,GAAZ;AACAkB,QAAAA,KAAK,CAAC,+EAAD,CAAL;AACH,OAHM,MAGA;AACH,cAAMD,KAAK,GAAG,IAAIU,KAAJ,CAAU3B,GAAG,CAACiB,KAAd,CAAd;AACA,cAAMA,KAAN;AACH;AACJ,KAbL,EAcKH,KAdL,CAcWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAG,MAAAA,KAAK,CAAC,sDAAD,CAAL;AACH,KAjBL;AAkBH,GApBD;;AAsBA,MAAIU,IAAI,GAAGlD,OAAO,CAACD,IAAR,CAAaoD,UAAb,GAA0B,EAArC,CAhFqB,CAgFoB;;AACzCD,EAAAA,IAAI,GAAGA,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,CAAlB,IAAuB,GAAvB,GAA6BF,IAAI,CAACE,SAAL,CAAe,EAAf,EAAmB,EAAnB,CAApC;AACA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDrD,OAAO,CAACD,IAAR,CAAa0B,QAA9D,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE6B,QAAZ;AAAsB,IAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAmB,IAAA,SAAS,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEtD,OAAO,CAACD,IAAR,CAAawD,MAAvB;AAA+B,IAAA,GAAG,EAAC,SAAnC;AAA6C,IAAA,KAAK,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAI,IAAA,KAAK,EAAE/B,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,cAA4CyB,IAA5C,CAHJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAEO,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,SAAS,EAAE;AAAhC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,EAAsCnD,KAAK,CAACJ,kBAA5C,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,EAAqCI,KAAK,CAACF,kBAA3C,SAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,EAAqCE,KAAK,CAACH,iBAA3C,WAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAJ,EAAsCG,KAAK,CAAC2B,gBAA5C,aAJJ,CAFJ,CAPJ,CADJ,EAmBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAEsB,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE;AAA/B;AAAf,KAAwDnD,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKR,KAAK,CAACH,IAAN,CAAW6B,MAAX,GAAqB1B,KAAK,CAACH,IAAN,CAAW6B,MAAZ,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1D,WACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,KAAK,EAAE;AAAE+B,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,CAAd;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAV;AAAiC,MAAA,OAAO,EAAEzB,eAAe,CAACX,IAAI,CAACY,EAAN,EAAU,OAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,mDAAmDZ,IAAI,CAACqC,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ;AASH,GAVoB,CAApB,GAYG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAbR,CAFJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,EAqBI;AAAI,IAAA,KAAK,EAAEV,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArBJ,EAsBI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,YAAY,EAAE;AAA/B;AAAf,KAAwDnD,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKR,KAAK,CAACH,IAAN,CAAWiC,KAAX,GAAoB9B,KAAK,CAACH,IAAN,CAAWiC,KAAZ,CAAmBH,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxD,WACI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,KAAK,EAAE;AAAE+B,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,CAAd;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAV;AAAiC,MAAA,OAAO,EAAEzB,eAAe,CAACX,IAAI,CAACY,EAAN,EAAU,OAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,GAAG,EAAE,mDAAmDZ,IAAI,CAACqC,UAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ;AASH,GAVmB,CAAnB,GAYG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CAbR,CAtBJ,CAnBJ,CADJ,CAFJ,CADJ;AAsEH,CAxJD;;AA0JA,MAAMC,SAAS,GAAGtE,KAAK,IAAI;AAAA,QACfuE,SADe,GACevE,KADf,CACfuE,SADe;AAAA,QACJC,KADI,GACexE,KADf,CACJwE,KADI;AAAA,QACGC,OADH,GACezE,KADf,CACGyE,OADH;AAEvB,SACI;AACI,IAAA,SAAS,EAAEF,SADf;AAEI,IAAA,KAAK,oBAAOC,KAAP;AAAcE,MAAAA,YAAY,EAAE,EAA5B;AAAgCC,MAAAA,OAAO,EAAE,OAAzC;AAAkDC,MAAAA,UAAU,EAAE;AAA9D,MAFT;AAGI,IAAA,OAAO,EAAEH,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH,CATD;;AAWA,MAAMI,SAAS,GAAG7E,KAAK,IAAI;AAAA,QACfuE,SADe,GACevE,KADf,CACfuE,SADe;AAAA,QACJC,KADI,GACexE,KADf,CACJwE,KADI;AAAA,QACGC,OADH,GACezE,KADf,CACGyE,OADH;AAEvB,SACI;AACI,IAAA,SAAS,EAAEF,SADf;AAEI,IAAA,KAAK,oBAAOC,KAAP;AAAcE,MAAAA,YAAY,EAAE,EAA5B;AAAgCC,MAAAA,OAAO,EAAE,OAAzC;AAAkDC,MAAAA,UAAU,EAAE;AAA9D,MAFT;AAGI,IAAA,OAAO,EAAEH,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH,CATD;;AAWA,MAAMjB,QAAQ,GAAG;AACbI,EAAAA,SAAS,EAAE,QADE;AAEbE,EAAAA,SAAS,EAAE,EAFE;AAGbC,EAAAA,YAAY,EAAE,EAHD;AAIbG,EAAAA,UAAU,EAAE,IAJC;AAKbC,EAAAA,WAAW,EAAE;AALA,CAAjB;AAQA,MAAMW,QAAQ,GAAG;AACbd,EAAAA,KAAK,EAAE;AADM,CAAjB;AAIA,MAAMe,WAAW,GAAG;AAChBnB,EAAAA,SAAS,EAAE;AADK,CAApB;AAIA,MAAMD,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,MADG;AAEdoB,EAAAA,KAAK,EAAE,SAFO;AAGdC,EAAAA,iBAAiB,EAAE,OAHL;AAIdC,EAAAA,iBAAiB,EAAE,gBAJL;AAKdC,EAAAA,iBAAiB,EAAE;AALL,CAAlB;AAQA,MAAMzB,UAAU,GAAG;AACfM,EAAAA,KAAK,EAAE,GADQ;AAEfC,EAAAA,MAAM,EAAE,GAFO;AAGfmB,EAAAA,gBAAgB,EAAE,WAHH;AAIfC,EAAAA,cAAc,EAAE,OAJD;AAKfV,EAAAA,OAAO,EAAE,OALM;AAMfT,EAAAA,UAAU,EAAE,MANG;AAOfC,EAAAA,WAAW,EAAE,MAPE;AAQfmB,EAAAA,WAAW,EAAE,OARE;AASfC,EAAAA,WAAW,EAAE,OATE;AAUfC,EAAAA,WAAW,EAAE,GAVE;AAWfd,EAAAA,YAAY,EAAE;AAXC,CAAnB;AAcA,MAAM/C,QAAQ,GAAG;AACbiC,EAAAA,SAAS,EAAE;AADE,CAAjB;AAKA,eAAe7D,OAAf","sourcesContent":["/**\n * Profile\n * @summary A profile page for users.\n * Lists a user's username and profile picture, favorite TV shows & movies, and other statistics\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Slider from 'react-slick';\nimport { FaUserPlus, FaCommentDots, FaCalendar } from 'react-icons/fa';\nimport Layout from '../components/Layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport '../styles/Profile.css';\n\nconst Profile = props => {\n    const [details, setDetails] = useState({ data: {} });\n    const [lists, setLists] = useState({ data: {} });\n    const [stats, setStats] = useState({\n        totalMoviesWatched: 0,\n        totalShowsWatched: 0,\n        totalRuntimeMovies: 0,\n        totalEpisodeCount: 0\n    });\n\n    const settings = {\n        dots: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        adaptiveHeight: true,\n        nextArrow: <NextArrow />,\n        prevArrow: <PrevArrow />\n    };\n\n    useEffect(() => {\n        fetch(\"/api/getUserDetails\", { credentials: 'include' })\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                }\n            }).then(data => {\n                setDetails({ data: data });\n                fetch(\"/api/getUserLists?name=\" + data.username)\n                    .then(res => {\n                        if (res.status === 200) {\n                            return res.json();\n                        }\n                    }).then(data => {\n                        setLists({ data: data });\n                        let runtime = 0;\n                        let seasonCount = 0; // seasons count\n                        data.movies.map((item, index) => {\n                            runtime += item.runtime;\n                        });\n                        data.shows.map((item, index) => {\n                            seasonCount += item.seasons;\n                        });\n                        setStats({\n                            totalMoviesWatched: data.movies.length,\n                            totalShowsWatched: data.shows.length,\n                            totalRuntimeMovies: runtime,\n                            totalSeasonCount: seasonCount\n                        });\n                    });\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Error checking for valid token.');\n            });\n    }, []);\n\n    const handleMediaPage = (id, type) => (event) => {\n        event.preventDefault();\n        fetch(\"/api/addTitle?id=\" + id + \"&type=\" + type)\n            .then(res => {\n                if (res.status === 200) {\n                    props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n                } else if (res.status === 202) {\n                    props.history.push(\"/media?id=\" + id + \"&type=\" + type);\n                } else if (res.status === 500) {\n                    console.log(res);\n                    alert(\"Error: Insufficient information for title. Available only as a search result.\")\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Error navigating to title\\'s page. Please try again.');\n            });\n    };\n\n    let date = details.data.dateJoined + \"\"; // make string\n    date = date.substring(4, 7) + \" \" + date.substring(11, 15);\n    return (\n        <Layout>\n            <h1 style={{ borderBottom: '1px solid black' }}>{details.data.username}</h1>\n            <div className=\"fluid\">\n                <Row style={rowStyle} className=\"align-items-center\">\n                    <Col md={5} lg={4} className=\"justify-content-center\">\n                        <div>\n                            <img src={details.data.avatar} alt=\"profile\" style={profileImg} />\n                            <br />\n                            <h5 style={username}><FaCalendar /> Joined {date}</h5>\n                        </div>\n                        <br />\n                        <div>\n                            <h4 style={underline}>Statistics</h4>\n                            <ul style={{ textAlign: 'left', listStyle: 'none' }}>\n                                <li><strong>Movies watched: </strong>{stats.totalMoviesWatched} movies</li>\n                                <li><strong>Total runtime: </strong>{stats.totalRuntimeMovies} min</li>\n                                <li><strong>Shows watched: </strong>{stats.totalShowsWatched} shows</li>\n                                <li><strong>Seasons binged: </strong>{stats.totalSeasonCount} seasons</li>\n                            </ul>\n                        </div>\n                    </Col>\n\n                    <Col md={7} lg={8}>\n                        <h3 style={underline}>Movies Watched</h3>\n                        <Slider style={{ marginTop: 10, marginBottom: 30 }} {...settings}>\n                            {lists.data.movies ? (lists.data.movies).map((item, index) => {\n                                return (\n                                    <div key={index} style={{ width: 105, height: 198 }}>\n                                        <Card style={{ marginLeft: 5, marginRight: 5 }}>\n                                            <a style={{ cursor: 'pointer' }} onClick={handleMediaPage(item.id, \"movie\")}>\n                                                <Card.Img src={\"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath} />\n                                            </a>\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                                :\n                                <div>\n                                    <p>Use Search to add movies!</p>\n                                </div>\n                            }\n                        </Slider>\n                        <br />\n                        <h3 style={underline}>Shows Watched</h3>\n                        <Slider style={{ marginTop: 10, marginBottom: 30 }} {...settings}>\n                            {lists.data.shows ? (lists.data.shows).map((item, index) => {\n                                return (\n                                    <div key={index} style={{ width: 105, height: 198 }}>\n                                        <Card style={{ marginLeft: 5, marginRight: 5 }}>\n                                            <a style={{ cursor: 'pointer' }} onClick={handleMediaPage(item.id, \"movie\")}>\n                                                <Card.Img src={\"http://image.tmdb.org/t/p/w185_and_h278_bestv2\" + item.posterPath} />\n                                            </a>\n                                        </Card>\n                                    </div>\n                                );\n                            })\n                                :\n                                <div>\n                                    <p>Use Search to add shows!</p>\n                                </div>\n                            }\n                        </Slider>\n                    </Col>\n                </Row>\n\n\n            </div>\n        </Layout >\n    );\n};\n\nconst NextArrow = props => {\n    const { className, style, onClick } = props;\n    return (\n        <div\n            className={className}\n            style={{ ...style, borderRadius: 50, display: \"block\", background: \"lightgrey\" }}\n            onClick={onClick}\n        />\n    );\n}\n\nconst PrevArrow = props => {\n    const { className, style, onClick } = props;\n    return (\n        <div\n            className={className}\n            style={{ ...style, borderRadius: 50, display: \"block\", background: \"lightgrey\" }}\n            onClick={onClick}\n        />\n    );\n}\n\nconst rowStyle = {\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: '5%',\n    marginRight: '5%'\n};\n\nconst colStyle = {\n    width: '100%',\n};\n\nconst alignCenter = {\n    textAlign: 'center'\n};\n\nconst underline = {\n    textAlign: 'left',\n    color: '#1f57a4',\n    borderBottomStyle: 'solid',\n    borderBottomColor: 'cornflowerBlue',\n    borderBottomWidth: 2\n};\n\nconst profileImg = {\n    width: 250,\n    height: 250,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderStyle: 'solid',\n    borderColor: 'black',\n    borderWidth: 0.4,\n    borderRadius: 500\n};\n\nconst username = {\n    textAlign: 'center',\n};\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}